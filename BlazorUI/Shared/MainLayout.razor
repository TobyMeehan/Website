@inherits LayoutComponentBase

@inject AlertState alertState
@inject FileUploadState uploadState

<div class="jumbotron banner-logo"></div>

<NavMenu />

<div class="container-fluid text-center">
    <div class="row">
        <div class="col-sm-2"></div>

        <div class="col-sm-8 text-left">
            @foreach (var alert in alertState.Queue)
            {
                <div class="@($"alert alert-{alert.Context.ToString().ToLower()} alert-dismissible fade show")" role="alert">
                    @if (alert.Title != null)
                    {
                        <h4 class="alert-heading">@alert.Title</h4>
                    }

                    @((MarkupString)alert.Body)
                    <button type="button" class="close" data-dismiss="alert" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
            }

            @Body
        </div>

        <div class="col-sm-2"></div>
    </div>

    @if (uploadState.Uploads.Any())
    {
        <div class="toast show position-absolute" style="right: 75px; bottom: 75px; min-width: 20%;">
            <div class="toast-header">
                @if (uploadState.Uploads.Any(x => x.Status == UploadFileResult.InProgress))
                {
                    <span class="spinner-border spinner-border-sm mr-2" role="status"></span>
                }
                else
                {
                    <span>
                        <i class="fas fa-check mr-2"></i>
                    </span>
                }
                <strong class="mr-auto">Uploading Files</strong>
                <button type="button" class="close" aria-label="Close" @onclick="@uploadState.DismissAll">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="toast-body p-0">
                <UploadList Uploads="uploadState.Uploads" OnUploadDismiss="(upload) => uploadState.DismissUpload(upload)"></UploadList>
            </div>
        </div>
    }
</div>

<hr />

<footer class="container-fluid text-center">
    <p>&copy; @DateTime.Now.Year Toby Meehan</p>
    <p>
        <a href="/update">Version 2.1</a>
    </p>
</footer>

@code {
    protected override void OnInitialized()
    {
        alertState.OnChange += StateHasChanged;
        uploadState.OnStateChanged += async () => await InvokeAsync(StateHasChanged);
    }
}
