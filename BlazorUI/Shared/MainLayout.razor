@inherits LayoutComponentBase

@inject AlertState alertState
@inject FileUploadState uploadState

<div class="jumbotron banner-logo"></div>

<NavMenu />

<div class="container-fluid text-center">
    <div class="row">
        <div class="col-sm-2"></div>

        <div class="col-sm-8 text-left">
            @foreach (var alert in alertState.Queue)
            {
                <div class="@($"alert alert-{alert.Context.ToString().ToLower()} alert-dismissible fade show")" role="alert">
                    @if (alert.Title != null)
                    {
                        <h4 class="alert-heading">@alert.Title</h4>
                    }

                    @((MarkupString)alert.Body)
                    <button type="button" class="close" data-dismiss="alert" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
            }

            @Body
        </div>

        <div class="col-sm-2">
            @if (uploadState.Files.Any() || uploadState.FailedUploads.Any())
            {
                    <div class="card mt-sm-5">
                        <div class="card-header">
                            Uploading Files
                        </div>
                        <ul class="list-group list-group-flush text-left">
                            @foreach (var fail in uploadState.FailedUploads)
                            {
                                <li class="list-group-item list-group-item-danger">
                                    <div class="d-flex w-100 justify-content-between">
                                        @fail
                                        <button type="button" class="close ml-auto" aria-label="Close" @onclick="() => uploadState.DismissFailedUpload(fail)">
                                            <span aria-hidden="true">&times;</span>
                                        </button>
                                    </div>
                                    <small>Upload Failed</small>
                                </li>
                            }
                            @foreach (var file in uploadState.Files)
                            {
                                <li class="list-group-item">
                                    <span class="spinner-border spinner-border-sm" role="status"></span>
                                    @file
                                </li>
                            }
                        </ul>
                    </div>

            }
        </div>
    </div>
</div>

<hr />

<footer class="container-fluid text-center">
    <p>&copy; @DateTime.Now.Year Toby Meehan</p>
    <p>
        <a href="/update">Version 2.1</a>
    </p>
</footer>

@code {
    protected override void OnInitialized()
    {
        alertState.OnChange += StateHasChanged;
        uploadState.OnUploadStart += async () => await InvokeAsync(() => StateHasChanged());
        uploadState.OnUploadComplete += async (filename) => await InvokeAsync(() => StateHasChanged());
        uploadState.OnUploadFailed += async (filename) => await InvokeAsync(() => StateHasChanged());
    }
}
