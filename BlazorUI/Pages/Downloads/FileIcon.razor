<i class="@_icon"></i>

@code {
    [Parameter] public string Filename { get; set; }

    private string _icon;

    protected override void OnInitialized()
    {
        _icon = GetIconClass(GetExtension(Filename));
    }

    string GetIconClass(string extension)
    {
        string cssClass = "";
        switch (extension)
        {
            case ".txt":
            case ".rtf":
                cssClass = "far fa-file-alt";
                break;
            case ".doc":
            case ".docx":
            case ".odt":
            case ".tex":
            case ".wpd":
                cssClass = "far fa-file-word";
                break;
            case ".xls":
            case ".xlsx":
            case ".xlsm":
            case ".ods":
                cssClass = "far fa-file-excel";
                break;
            case ".ppt":
            case ".pptx":
            case ".pps":
            case ".odp":
            case ".key":
                cssClass = "far fa-file-powerpoint";
                break;
            case ".zip":
            case ".rar":
            case ".7z":
            case ".arj":
            case ".deb":
            case ".pkg":
            case ".rpm":
            case ".gz":
            case ".z":
                cssClass = "far fa-file-archive";
                break;
            case ".jpg":
            case ".jpeg":
            case ".png":
            case ".bmp":
            case ".svg":
            case ".ai":
            case ".gif":
            case ".ico":
            case ".ps":
            case ".psd":
            case ".tif":
            case ".tiff":
                cssClass = "far fa-file-image";
                break;
            case ".aif":
            case ".cda":
            case ".mid":
            case ".midi":
            case ".mp3":
            case ".mpa":
            case ".ogg":
            case ".wav":
            case ".wma":
            case ".wpl":
                cssClass = "far fa-file-audio";
                break;
            case ".3g2":
            case ".3gp":
            case ".avi":
            case ".flv":
            case ".h264":
            case ".m4v":
            case ".mkv":
            case ".mov":
            case ".mp4":
            case ".mpg":
            case ".mpeg":
            case ".rm":
            case ".swf":
            case ".vob":
            case ".wmv":
                cssClass = "far fa-file-video";
                break;
            case ".pdf":
                cssClass = "far fa-file-pdf";
                break;
            case ".csv":
                cssClass = "fas fa-file-csv";
                break;
            case ".c":
            case ".class":
            case ".cpp":
            case ".cs":
            case ".h":
            case ".pl":
            case ".sh":
            case ".swift":
            case ".vb":
            case ".vbs":
            case ".bat":
            case ".sln":
            case ".asp":
            case ".aspx":
            case ".cgi":
            case ".htm":
            case ".html":
            case ".js":
            case ".jsp":
            case ".php":
            case ".py":
            case ".xhtml":
                cssClass = "far fa-file-code";
                break;
            case ".exe":
            case ".dll":
            case ".msi":
            case ".wsf":
                cssClass = "fab fa-windows";
                break;
            case ".jar":
                cssClass = "fab fa-java";
                break;
            default:
                cssClass = "far fa-file";
                break;
        }

        return cssClass;
    }

    string GetExtension(string filename)
    {
        return filename.Substring(filename.LastIndexOf("."), filename.Length - filename.LastIndexOf("."));
    }
}
