@typeparam T

@if (Model == null && _context == null)
{
    @Loading
}
else
{
    RenderFragment<T> completed = Completed ?? ChildContent;
    @completed(_context ?? Model)
}

@code {
    [Parameter] public T Model { get; set; }
    [Parameter] public Task<T> Task { get; set; }
    [Parameter] public RenderFragment<T> ChildContent { get; set; }
    [Parameter] public RenderFragment<T> Completed { get; set; }
    [Parameter] public RenderFragment Loading { get; set; }

    private T _context;

    protected override async Task OnInitializedAsync()
    {
        _context = await Task;
    }

    protected override async Task OnParametersSetAsync()
    {
        if (ChildContent != null && Completed != null)
        {
            throw new InvalidOperationException($"Do not specify both '{nameof(Completed)}' and '{nameof(ChildContent)}'.");
        }

        Loading ??= @<Loading></Loading>;
    }
}
