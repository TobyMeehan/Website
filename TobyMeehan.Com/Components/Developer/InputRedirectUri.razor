@inherits InputBase<string>

<div class="input-group" @attributes="AdditionalAttributes">
    <InputSelect class="custom-select col-2" @bind-Value="_scheme">
        <option selected="@(_scheme == "https")" value="https">https://</option>
        <option selected="@(_scheme == "http")" value="http">http://</option>
    </InputSelect>
    <InputText class="form-control" @bind-Value="_path" placeholder="example.com/callback" />
</div>

@code {
    private Uri GetUri()
    {
        if (Uri.TryCreate(CurrentValue, UriKind.Absolute, out Uri result))
        {
            return result;
        }

        return null;
    }

    private string _scheme
    {
        get
        {
            return GetUri()?.Scheme ?? "https";
        }
        set
        {
            CurrentValue = $"{value}://{_path}";
        }
    }

    private string _path
    {
        get
        {
            return $"{GetUri()?.Authority}{GetUri()?.AbsolutePath}";
        }
        set
        {
            CurrentValue = $"{_scheme}://{value}";
        }
    }

    protected override bool TryParseValueFromString(string value, out string result, out string validationErrorMessage)
    {
        validationErrorMessage = "Invalid URL format.";
        result = value;

        return Uri.TryCreate(value, UriKind.Absolute, out Uri uri);
    }
}
