@inherits InputBase<string>

<div class="input-group">
    <InputText class="form-control" @bind-Value="_baseName" />
    <div class="input-group-append">
        <span class="input-group-text">.@_extension</span>
    </div>
</div>

@code {
    private string _baseName
    {
        get => string.Join(".", CurrentValue.Split(".").SkipLast(1));
        set => CurrentValue = $"{value}.{_extension}";
    }

    private string _extension
    {
        get => CurrentValue.Split(".").Last();
    }

    protected override bool TryParseValueFromString(string value, out string result, out string validationErrorMessage)
    {
        result = value;

        List<char> invalidChars = System.IO.Path.GetInvalidFileNameChars().Union(value).ToList();

        try
        {
            System.IO.File.OpenRead(value).Close();
        }
        catch (ArgumentException)
        {
            if (value.StartsWith(" "))
            {
                validationErrorMessage = "Filename cannot begin with a space.";
            }
            else if (invalidChars.Any())
            {
                validationErrorMessage = $"Filename contains some of the cursed characters ({string.Join(",", invalidChars)}).";
            }
            else
            {
                validationErrorMessage = "Invalid filename.";
            }

            return false;
        }
        catch (Exception) { }

        validationErrorMessage = "";
        return true;
    }
}
