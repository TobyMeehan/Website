@inherits AttributableComponentBase

@if (_isInEditMode)
{
    <InputComment User="Comment.User" Comment="Comment" OnSubmit="Edit_Submit" OnCancel="Edit_Click">
        <SubmitButton>Save</SubmitButton>
        <ChildContent>
            @ChildContent
        </ChildContent>
    </InputComment>
}
else
{
    <UserMediaListItem User="Comment.User" class="@($"comment mb-4 p-2 {CssClass}")" @attributes="AdditionalAttributes">
        <Title>
            <div class="d-flex justify-content-between">
                <div>
                    <UserLink User="Comment.User">@Comment.User.Username</UserLink>
                    <small class="text-muted">
                        @Comment.DateString()
                        @if (Comment.Edited != null)
                        {
                            <span>(edited)</span>
                        }
                    </small>
                </div>
                <AuthorizeView Resource="Comment" Policy="@AuthorizationPolicies.CanEditComment">
                    <div class="dropleft">
                        <a role="button" href="#" class="text-light" id="Dropdown-@Comment.Id" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                            <i class="fas fa-ellipsis-v"></i>
                        </a>
                        <div class="dropdown-menu" aria-labelledby="Dropdown-@Comment.Id">
                            <a class="dropdown-item" href="#" @onclick="Edit_Click" @onclick:preventDefault>
                                <i class="fas fa-edit"></i> Edit
                            </a>
                            <a class="dropdown-item" href="#" @onclick="() => OnDelete.InvokeAsync(Comment)" @onclick:preventDefault>
                                <i class="fas fa-trash"></i> Delete
                            </a>
                        </div>
                    </div>
                </AuthorizeView>
            </div>
        </Title>
        <ChildContent>
            <p class="mb-1">
                @((MarkupString)WebUtility.HtmlEncode(Comment.Content).Replace("\n", "<br />"))
            </p>

            @ChildContent
        </ChildContent>
    </UserMediaListItem>
}

@code {
    [Parameter] public Comment Comment { get; set; }

    [Parameter] public EventCallback<CommentViewModel> OnEdit { get; set; }
    [Parameter] public EventCallback<Comment> OnDelete { get; set; }

    [Parameter] public RenderFragment ChildContent { get; set; }

    private bool _isInEditMode = false;

    private void Edit_Click()
    {
        _isInEditMode = !_isInEditMode;
    }

    private async Task Delete_Click()
    {
        await OnDelete.InvokeAsync(Comment);
    }

    private async Task Edit_Submit(CommentViewModel model)
    {
        await OnEdit.InvokeAsync(model);
        Edit_Click();
    }
}
