@inherits AttributableComponentBase

<div class="media @CssClass" @attributes="AdditionalAttributes">
    <UserAvatar User="User" class="avatar-medium mr-3"></UserAvatar>
    
    <div class="media-body">
        <EditForm Model="_model" OnValidSubmit="Form_Submit">
            <DataAnnotationsValidator />

            <div class="form-group">
                <InputTextArea class="form-control" rows="2" placeholder="@Placeholder" @bind-Value="_model.Content" />
                <ValidationMessage For="() => _model.Content" />
            </div>

            <div class="form-group">
                <button type="submit" class="btn btn-primary">
                    @SubmitButton
                </button>
                <button type="reset" class="btn btn-secondary" @onclick="OnCancel.InvokeAsync">
                    Cancel
                </button>
            </div>
        </EditForm>

        @ChildContent
    </div>
</div>

@code {
    [Parameter] public User User { get; set; }

    [Parameter] public string Placeholder { get; set; }
    [Parameter] public string Value { get; set; }
    [Parameter] public Comment Comment { get; set; }
    [Parameter] public EntityBase Entity { get; set; }

    [Parameter] public RenderFragment SubmitButton { get; set; }
    [Parameter] public RenderFragment ChildContent { get; set; }

    [Parameter] public EventCallback<CommentViewModel> OnSubmit { get; set; }
    [Parameter] public EventCallback OnCancel { get; set; }

    private CommentViewModel _model = new CommentViewModel();

    protected override void OnInitialized()
    {
        if (Comment != null)
        {
            Value = Comment.Content;
            _model.Id = Comment.Id;
        }

        if (Entity != null)
        {
            _model.EntityId = Entity.Id;
        }

        _model.Content = Value;
    }

    protected virtual async Task Form_Submit()
    {
        if (_model.Content.Length < 1)
        {
            return;
        }

        await OnSubmit.InvokeAsync(_model);
        _model.Content = "";
    }
}
