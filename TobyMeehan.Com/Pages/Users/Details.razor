@page "/users/{Username}"

<Title>@Username</Title>

@if (_user == null)
{
    <Loading></Loading>
}
else
{
    <Card class="my-3">
        <h3>
            <Username User="_user"></Username>

            @if (_user.IsVerified())
            {
                <small class="text-muted">Verified</small>
            }
        </h3>
    </Card>

    @if (!string.IsNullOrEmpty(_user.Description))
    {
        <Card class="my-3">
            @((MarkupString)_user.Description)
        </Card>
    }

    @if (_user.IsVerified())
    {
        <Card class="my-3">
            <h3>@Username's Downloads</h3>

            @if (!_downloads.Any())
            {
                <p>@Username has not created any downloads </p>
            }
            else
            {
                <DownloadCardDeck Downloads="_downloads"></DownloadCardDeck>
            }
        </Card>
    }

    <AuthorizeView Policy="@AuthorizationPolicies.IsAdmin">
        <Card class="my-3">
            <h3>Admin Actions</h3>

            <hr />

            <h4>Reset Password</h4>

            <EditForm Model="_passwordForm" Context="editContext" OnValidSubmit="AdminPasswordForm_Submit">
                <DataAnnotationsValidator />
                <ServerSideValidator @ref="_serverSideValidator" />

                <div class="form-group row">
                    <label for="NewPassword" class="col-md-2 col-form-label">New Password</label>
                    <div class="col-md-10">
                        <InputText id="NewPassword" type="password" @bind-Value="_passwordForm.NewPassword" class="form-control" />
                        <ValidationMessage For="() => _passwordForm.NewPassword" class="text-danger" /> 
                    </div>
                </div>

                <div class="form-group row">
                    <label for="ConfirmNewPassword" class="col-md-2 col-form-label">Confirm New Password</label>
                    <div class="col-md-10">
                        <InputText id="ConfirmNewPassword" type="password" @bind-Value="_passwordForm.ConfirmNewPassword" class="form-control" />
                        <ValidationMessage For="() => _passwordForm.ConfirmNewPassword" class="text-danger" />
                    </div>
                </div>

                <div class="form-group row">
                    <label for="AdminPassword" class="col-md-2 col-form-label">Admin Password</label>
                    <div class="col-md-10">
                        <InputText id="AdminPassword" type="password" @bind-Value="_passwordForm.CurrentPassword" class="form-control" />
                        <ValidationMessage For="() => _passwordForm.CurrentPassword" class="text-danger" />
                    </div>
                </div>

                <button type="submit" class="btn btn-primary">Submit</button>
            </EditForm>

            <hr />

            <h4>Manage Roles</h4>

            <div class="row">
                <div class="col-md-6">
                    <Card class="my-3">
                        <h5>Available Roles</h5>

                        <ul class="list-group list-group-flush">
                            @foreach (var role in _unusedRoles)
                            {
                                <li class="list-group-item">
                                    <button class="btn btn-outline-primary btn-block" @onclick="() => AddRole(role)">
                                        <i class="fas fa-plus-circle"></i>
                                        @role.Name
                                    </button>
                                </li>
                            }
                        </ul>
                    </Card>
                </div>

                <div class="col-md-6">
                    <Card class="my-3">
                        <h5>User's Roles</h5>

                        <ul class="list-group list-group-flush">
                            @foreach (var role in _user.Roles)
                            {
                                <li class="list-group-item">
                                    <button class="btn btn-outline-danger btn-block" @onclick="() => RemoveRole(role)">
                                        <i class="fas fa-minus-circle"></i>
                                        @role.Name
                                    </button>
                                </li>
                            }
                        </ul>
                    </Card>
                </div>
            </div>
        </Card>
    </AuthorizeView>
}

@code {
    private RenderFragment alertContent =>@<span>Successfully changed password of <UserLink User="@_user"></UserLink>.</span>;
}